--换购正例(需要处理二手车)
--维修单
--主键ro_id
DROP TABLE  BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE;
CREATE TABLE BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE
(
UUID STRING NOT NULL,
BUYDATE TIMESTAMP,
DEALER  STRING,
DEALERNAME STRING,
CUSTOMERNOBUY STRING,
CUSTOMERNONAMEBUY STRING,
CUSTOMERCERTYPEBUY STRING,
CUSTOMERTELBUY STRING,
LICENSEPLATE STRING,
VIN STRING,
CARSERIESCODENAME STRING,
CARTYPECODENAME STRING,
COLORNAME STRING,
CARBUYPRICE decimal(10,2),
INVOICEDATEFIRST TIMESTAMP,
DRIVEMILEAGE   bigint,
INBILLNO STRING,
GEARBOXTYPE STRING,
VEHICLETYPE STRING,
CUSTOMERCERTYPESAL STRING,
OUTBILLNO STRING,
CARSALEPRICE  decimal(10,2) ,
CARBUYPRICESAL decimal(10,2),
NPROFITAMT decimal(38,2),
MODIFY_TS  TIMESTAMP,
EXTRACT_TS  TIMESTAMP,
SRC_SYS  STRING,
PRIMARY KEY(UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;

INSERT INTO BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE
SELECT 
UUID	,
BUYDATE	,
DEALER	,
DEALERNAME	,
CUSTOMERNOBUY	,
CUSTOMERNONAMEBUY	,
CUSTOMERCERTYPEBUY	,
CUSTOMERTELBUY	,
LICENSEPLATE	,
VIN	,
CARSERIESCODENAME	,
CARTYPECODENAME	,
COLORNAME	,
CARBUYPRICE	,
INVOICEDATEFIRST	,
DRIVEMILEAGE	,
INBILLNO	,
GEARBOXTYPE	,
VEHICLETYPE	,
CUSTOMERCERTYPESAL	,
OUTBILLNO	,
CARSALEPRICE	,
CARBUYPRICESAL	,
NPROFITAMT	,
MODIFY_TS	,
EXTRACT_TS	,
SRC_SYS	
FROM 
BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_DATA_MINING;


COMPUTE STATS BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE;

DROP TABLE BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE;
CREATE TABLE BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE
(
RO_ID   BIGINT NOT NULL,
RO_NO   STRING ,
DEALER_CODE   STRING ,
RO_TYPE   STRING ,
RO_TYPE_CODE   STRING ,
START_DATE   TIMESTAMP ,
FORCAST_SUMMIT_DATE   TIMESTAMP ,
DELIVER_DATE   TIMESTAMP ,
VIN3   STRING ,
ENTER_MILEAGE   decimal(12,4),
total_LABOUR_HOUR   decimal(8,2),
RECEIVEABLE_LABOUR_FEE   decimal(12,4),
REAL_LABOUR_FEE   decimal(12,4),
DISCOUNT_LABOUR_FEE   decimal(12,4),
RECEIVEABLE_PARTS_FEE   decimal(12,4),
REAL_PARTS_FEE   decimal(12,4),
DISCOUNT_PARTS_FEE   decimal(12,4),
TOTAL_AMOUNT   decimal(12,4),
TOTAL_DISCOUNT_FEE    decimal(12,4),
INVOICE_DATE   TIMESTAMP ,
TROUBLE_DESCRIBE   STRING ,
BALANCE_DATE   TIMESTAMP ,
LICENSE_DATE   TIMESTAMP ,
DAMAGE_INSURANCE   STRING ,
INSURANCE_FEE   decimal(16,2),
MODIFY_TS  TIMESTAMP,
EXTRACT_TS  TIMESTAMP,
SRC_SYS  STRING,
PRIMARY KEY (RO_ID)
)
PARTITION BY HASH(RO_ID) PARTITIONS 12
STORED AS KUDU;
REFRESH  BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE;
COMPUTE STATS BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE;

DELETE FROM BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE;
INSERT INTO BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE
SELECT 
RO_ID	,
RO_NO	,
DEALER_CODE	,
RO_TYPE	,
RO_TYPE_CODE	,
START_DATE	,
FORCAST_SUMMIT_DATE	,
DELIVER_DATE	,
VIN AS VIN3	,
ENTER_MILEAGE	,
total_LABOUR_HOUR	,
RECEIVEABLE_LABOUR_FEE	,
REAL_LABOUR_FEE	,
DISCOUNT_LABOUR_FEE	,
RECEIVEABLE_PARTS_FEE	,
REAL_PARTS_FEE	,
DISCOUNT_PARTS_FEE	,
TOTAL_AMOUNT	,
TOTAL_DISCOUNT_FEE	,
INVOICE_DATE	,
TROUBLE_DESCRIBE	,
BALANCE_DATE	,
LICENSE_DATE	,
DAMAGE_INSURANCE	,
INSURANCE_FEE	,
MODIFY_TS	,
EXTRACT_TS	,
SRC_SYS	
FROM 
BIGDATA.RAW_DDC_TT_RO_DATA_MINING ;
--表分析
COMPUTE STATS BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE;

--销售单
--主键vin
DROP TABLE BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE;
CREATE TABLE BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE
(
UUID  STRING NOT NULL,
ORDER_ID   BIGINT ,
VIN1 STRING ,
SALES_NO   STRING ,
DEALER_CODE   STRING ,
SALES_CODE   STRING ,
SALES_DATE   TIMESTAMP ,
OUTBOUND_DATE   TIMESTAMP ,
SALES_AMOUNT   decimal(12,4),
MODIFY_TS  TIMESTAMP,
EXTRACT_TS  TIMESTAMP,
SRC_SYS  STRING,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;

DELETE FROM BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE;
INSERT INTO BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE
select 
T1.UUID,
T1.ORDER_ID	,
T1.VIN1	,
T1.SALES_NO	,
T1.DEALER_CODE	,
T1.SALES_CODE	,
T1.SALES_DATE	,
T1.OUTBOUND_DATE	,
T1.SALES_AMOUNT	,
T1.MODIFY_TS	,
T1.EXTRACT_TS	,
T1.SRC_SYS
from 
BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_DATA_MINING_WITH_VIN T1;
--where T1.SALES_DATE is not null; ---限制销售日期非空
--表分析
COMPUTE STATS BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE;

--车主信息(个人)
--主键vin+DEALER_CODE
DROP TABLE BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE;
CREATE TABLE BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE
(
VIN   STRING NOT NULL,
DEALER_CODE   STRING  ,
OWNER_NO   STRING ,
OWNER_PROPERTY   STRING ,
OWNER_PROPERTY_CODE   STRING ,
OWNER_NAME   STRING ,
IDCARD   STRING ,
GENDER   STRING ,
INDUSTRY   STRING ,
INDUSTRY_CODE   STRING ,
PROVINCE   STRING ,
PROVINCE_CODE   STRING ,
CITY   STRING ,
CITY_CODE   STRING ,
MOBILE   STRING ,
BIRTHDAY   TIMESTAMP ,
HOBBY1   STRING ,
HOBBY2   STRING ,
HOBBY3   STRING ,
EDUCATION   STRING ,
MARRIAGE_CODE   STRING ,
POSITION_CODE   STRING ,
POSITION_NAME   STRING ,
NOMESSAGE   STRING ,
NOPHONE   STRING ,
NOEMAIL   STRING ,
NOPOST   STRING ,
MODIFY_TS  TIMESTAMP,
EXTRACT_TS  TIMESTAMP,
SRC_SYS  STRING,
PRIMARY KEY (VIN)
)
PARTITION BY HASH(VIN) PARTITIONS 12
STORED AS KUDU;

DELETE FROM BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE;
INSERT INTO BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE 
SELECT
VIN	,
DEALER_CODE	,--这个没用,只是为了保持主键
OWNER_NO	,
OWNER_PROPERTY	,
OWNER_PROPERTY_CODE	,
OWNER_NAME	,
IDCARD	,
GENDER	,
INDUSTRY	,
INDUSTRY_CODE	,
PROVINCE	,
PROVINCE_CODE	,
CITY	,
CITY_CODE	,
MOBILE	,
BIRTHDAY	,
HOBBY1	,
HOBBY2	,
HOBBY3	,
EDUCATION	,
MARRIAGE_CODE	,
POSITION_CODE	,
POSITION_NAME	,
NOMESSAGE	,
NOPHONE	,
NOEMAIL	,
NOPOST	,
MODIFY_TS	,
EXTRACT_TS	,
SRC_SYS	
FROM 
BIGDATA.RAW_DDC_TM_OWNER_NEW_DATA_MINING;
--表分析
COMPUTE STATS BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE;

--车辆信息
--主键vin+DEALER_CODE
DROP TABLE BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE;
CREATE TABLE BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE
(
VIN2   STRING NOT NULL,
DEALER_CODE   STRING ,
PRODUCT_NO   STRING ,
LICENSE_NO   STRING ,
MODEL   STRING ,
PURCHASED_DATE   TIMESTAMP ,
MODIFY_TS  TIMESTAMP,
EXTRACT_TS  TIMESTAMP,
SRC_SYS  STRING,
PRIMARY KEY (VIN2)
)
PARTITION BY HASH(VIN2) PARTITIONS 12
STORED AS KUDU;
delete from BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE;
insert into BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE
select
Vin as VIN2	,
DEALER_CODE	, --这个没用，只是为了保持主键
PRODUCT_NO	,
LICENSE_NO	,
MODEL	,
PURCHASED_DATE	,
MODIFY_TS	,
EXTRACT_TS	,
SRC_SYS	
from
BIGDATA.RAW_DDC_TM_VEHICLE_NEW_DATA_MINING;
--WHERE MODEL IS  NOT NULL AND  TRIM(MODEL)<>''
--AND PRODUCT_NO IS NOT NULL  AND TRIM(PRODUCT_NO)<>'';
--表分析
COMPUTE STATS BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE;

--#######################售后
--#只统计在收购日期之前首次开票日期之后的维修记录
DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE
(
UUID STRING,
RO_ID   BIGINT NOT NULL,
RO_NO   STRING ,
DEALER_CODE   STRING ,
RO_TYPE   STRING ,
RO_TYPE_CODE   STRING ,
START_DATE   TIMESTAMP ,
FORCAST_SUMMIT_DATE   TIMESTAMP ,
DELIVER_DATE   TIMESTAMP ,
VIN3   STRING ,
ENTER_MILEAGE   decimal(12,4),
total_LABOUR_HOUR   decimal(8,2),
RECEIVEABLE_LABOUR_FEE   decimal(12,4),
REAL_LABOUR_FEE   decimal(12,4),
DISCOUNT_LABOUR_FEE   decimal(12,4),
RECEIVEABLE_PARTS_FEE   decimal(12,4),
REAL_PARTS_FEE   decimal(12,4),
DISCOUNT_PARTS_FEE   decimal(12,4),
TOTAL_AMOUNT   decimal(12,4),
TOTAL_DISCOUNT_FEE    decimal(12,4),
INVOICE_DATE   TIMESTAMP ,
TROUBLE_DESCRIBE   STRING ,
BALANCE_DATE   TIMESTAMP ,
LICENSE_DATE   TIMESTAMP ,
DAMAGE_INSURANCE   STRING ,
INSURANCE_FEE   decimal(16,2),
BuyDate  TIMESTAMP,
InvoiceDateFirst TIMESTAMP,
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;



DELETE FROM  BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE;
INSERT INTO  BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE
select 
UUID() AS UUID,
T1.RO_ID                     ,  
T1.RO_NO                     ,
T1.DEALER_CODE               ,
T1.RO_TYPE                   ,
T1.RO_TYPE_CODE              ,
T1.START_DATE                ,
T1.FORCAST_SUMMIT_DATE       ,
T1.DELIVER_DATE              ,
T1.VIN3                      ,
T1.ENTER_MILEAGE             ,
T1.total_LABOUR_HOUR         ,
T1.RECEIVEABLE_LABOUR_FEE    ,
T1.REAL_LABOUR_FEE           ,
T1.DISCOUNT_LABOUR_FEE       ,
T1.RECEIVEABLE_PARTS_FEE     ,
T1.REAL_PARTS_FEE            ,
T1.DISCOUNT_PARTS_FEE        ,
T1.TOTAL_AMOUNT              ,
T1.TOTAL_DISCOUNT_FEE        ,
T1.INVOICE_DATE              ,
T1.TROUBLE_DESCRIBE          ,
T1.BALANCE_DATE              ,
T1.LICENSE_DATE              ,
T1.DAMAGE_INSURANCE          ,
T1.INSURANCE_FEE             ,
T2.BuyDate                   ,
T2.InvoiceDateFirst          ,
NOW() AS REFRESH_DATE
from BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE T1 left join 
BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE T2
ON T1.VIN3=T2.VIN;
COMPUTE STATS  BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE;


DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1
(
VIN STRING NOT NULL,
BUYDATE TIMESTAMP NOT NULL, 
INVOICEDATEFIRST  TIMESTAMP NOT NULL,
FIX_CNT INT,
LAST_FIX_DATE TIMESTAMP,
FIRST_MAINTENANCE INT,
MAINTENANCE INT,
INSURANCE INT ,
CLAIM INT ,
MINOR_REPAIRS INT,
OVERHAUL INT,
ACCIDENT INT ,
SALES_CNT INT ,
total_LABOUR_HOUR DECIMAL(38,4),
AVG_LABOUR_HOUR DECIMAL(38,4),
TOTAL_RECEIVEABLE_LABOUR_FEE DECIMAL(38,4),
AVG_RECEIVEABLE_LABOUR_FEE DECIMAL(38,4),
TOTAL_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_LABOUR_FEE_DISCOUNT DECIMAL(38,4),
TOTAL_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
AVG_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
TOTAL_REAL_PARTS_FEE DECIMAL(38,4),
AVG_REAL_PARTS_FEE DECIMAL(38,4),
AVG_PARTS_FEE_DISCOUNT DECIMAL(38,4),
TOTAL_AMOUNT DECIMAL(38,4),
AVG_AMOUNT DECIMAL(38,4),
TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_FIX_DURATION DECIMAL(38,4),
AVG_DELIVER_DELTA DECIMAL(38,4),
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (VIN,BUYDATE,INVOICEDATEFIRST)
)
PARTITION BY HASH(VIN) PARTITIONS 12
STORED AS KUDU;

DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1;
INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1
SELECT VIN3 AS VIN,
       BUYDATE,
	   INVOICEDATEFIRST,
      CAST( COUNT(*) AS INT) AS FIX_CNT,
       MAX(START_DATE) AS LAST_FIX_DATE,
       
      CAST ( SUM(CASE
             WHEN RO_TYPE = '首保' THEN
              1
             ELSE
              0
           END) AS INT) AS FIRST_MAINTENANCE,
       CAST (SUM(CASE
             WHEN RO_TYPE = '保养' THEN
              1
             ELSE
              0
           END) AS INT) AS MAINTENANCE,
      CAST( SUM(CASE
             WHEN RO_TYPE LIKE '保险_' OR RO_TYPE = '保险' THEN
              1
             ELSE
              0
           END) AS INT) AS INSURANCE,
     CAST (  SUM(CASE
             WHEN RO_TYPE = '索赔' THEN
              1
             ELSE
              0
           END) AS INT ) AS CLAIM,
      CAST ( SUM(CASE
             WHEN RO_TYPE = '小修' THEN
              1
             ELSE
              0
           END) AS INT ) AS MINOR_REPAIRS,
     CAST(  SUM(CASE
             WHEN RO_TYPE = '大修' THEN
              1
             ELSE
              0
           END) AS INT) AS OVERHAUL,
      CAST( SUM(CASE
             WHEN RO_TYPE = '事故' THEN
              1
             ELSE
              0
           END) AS INT )AS ACCIDENT,
      CAST( COUNT(DISTINCT DEALER_CODE)  AS INT ) AS SALES_CNT,
      CAST ( SUM(total_LABOUR_HOUR) as decimal(38,4)) AS total_LABOUR_HOUR,
      CAST( SUM(total_LABOUR_HOUR) / COUNT(*) as decimal(38,4)) AS AVG_LABOUR_HOUR,
      CAST(SUM(RECEIVEABLE_LABOUR_FEE) as decimal(38,4)) AS TOTAL_RECEIVEABLE_LABOUR_FEE,
      CAST( SUM(RECEIVEABLE_LABOUR_FEE) / COUNT(*) as decimal(38,4)) AS AVG_RECEIVEABLE_LABOUR_FEE,
      CAST( SUM(REAL_LABOUR_FEE) as decimal(38,4)) AS TOTAL_REAL_LABOUR_FEE,
      CAST(SUM(REAL_LABOUR_FEE) / COUNT(*)  as decimal(38,4)) AS AVG_REAL_LABOUR_FEE,
      CAST ((SUM(RECEIVEABLE_LABOUR_FEE) - SUM(REAL_LABOUR_FEE)) / COUNT(*) as decimal(38,4) )AS AVG_LABOUR_FEE_DISCOUNT,
      CAST( SUM(RECEIVEABLE_PARTS_FEE) as decimal(38,4)) AS TOTAL_RECEIVEABLE_PARTS_FEE,
      CAST( SUM(RECEIVEABLE_PARTS_FEE) / COUNT(*) as decimal(38,4)) AS AVG_RECEIVEABLE_PARTS_FEE,
      CAST(SUM(REAL_PARTS_FEE) as decimal(38,4)) AS TOTAL_REAL_PARTS_FEE,
      CAST(SUM(REAL_PARTS_FEE) / COUNT(*) as decimal(38,4) ) AS AVG_REAL_PARTS_FEE,
      CAST((SUM(RECEIVEABLE_PARTS_FEE) - SUM(REAL_PARTS_FEE)) / COUNT(*) as decimal(38,4)) AS AVG_PARTS_FEE_DISCOUNT,
       CAST(SUM(TOTAL_AMOUNT) as decimal(38,4)) AS TOTAL_AMOUNT,
       CAST(SUM(TOTAL_AMOUNT) / COUNT(*) as decimal(38,4)) AS AVG_AMOUNT,
       CAST(SUM(REAL_LABOUR_FEE + REAL_PARTS_FEE) as decimal(38,4) ) AS TOTAL_REAL_AMOUNT,
       CAST(SUM(REAL_LABOUR_FEE + REAL_PARTS_FEE) / COUNT(*) as decimal(38,4)) AS AVG_TOTAL_REAL_AMOUNT,
       CAST(SUM(DATEDIFF(DELIVER_DATE, START_DATE) + 1) / COUNT(*) as decimal(38,4)) AS AVG_FIX_DURATION,
       CAST(SUM(DATEDIFF(DELIVER_DATE, FORCAST_SUMMIT_DATE) + 1) / COUNT(*) as decimal(38,4)) AS AVG_DELIVER_DELTA,
	   NOW() AS REFRESH_DATE
  FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_DSE_PRE
  WHERE date_trunc('day',BUYDATE)>=date_trunc('day',START_DATE) AND date_trunc('day',INVOICEDATEFIRST)<date_trunc('day',START_DATE)
 GROUP BY VIN3, BUYDATE , INVOICEDATEFIRST  ;
---表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1;--67597


---删除不合理的数据
DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1 
WHERE 
total_LABOUR_HOUR  <0 OR
AVG_LABOUR_HOUR  <0 OR
TOTAL_RECEIVEABLE_LABOUR_FEE  <0 OR
AVG_RECEIVEABLE_LABOUR_FEE  <0 OR
TOTAL_REAL_LABOUR_FEE  <0 OR
AVG_REAL_LABOUR_FEE  <0 OR
--AVG_LABOUR_FEE_DISCOUNT  <0 OR
TOTAL_RECEIVEABLE_PARTS_FEE  <0 OR
AVG_RECEIVEABLE_PARTS_FEE  <0 OR
TOTAL_REAL_PARTS_FEE  <0 OR
AVG_REAL_PARTS_FEE  <0 OR
--AVG_PARTS_FEE_DISCOUNT  <0 OR
TOTAL_AMOUNT  <0 OR
AVG_AMOUNT  <0 OR
TOTAL_REAL_AMOUNT  <0 OR
AVG_TOTAL_REAL_AMOUNT  <0;
--OR AVG_FIX_DURATION  <0;



DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1
(
UUID STRING,
VIN STRING NOT NULL,
CUSTOMERCERTYPEBUY STRING,
DEALER STRING,
DEALERNAME STRING,
CARSERIESCODENAME STRING,
CARTYPECODENAME STRING,
INVOICEDATEFIRST TIMESTAMP,
DRIVEMILEAGE bigint,
BUYDATE TIMESTAMP,
VEHICLETYPE STRING,
CAR_AGE DECIMAL(38,4),
FIX_CNT INT,
LAST_FIX_DATE TIMESTAMP,
FIRST_MAINTENANCE_DATE TIMESTAMP,
FIRST_MAINTENANCE INT ,
MAINTENANCE INT,
INSURANCE  INT,
CLAIM  INT,
MINOR_REPAIRS INT,
OVERHAUL INT,
ACCIDENT  INT ,
SALES_CNT  INT,
AVG_LABOUR_HOUR  DECIMAL(38,4),
AVG_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_LABOUR_FEE_DISCOUNT DECIMAL(38,4),
AVG_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
AVG_REAL_PARTS_FEE DECIMAL(38,4),
AVG_PARTS_FEE_DISCOUNT DECIMAL(38,4),
AVG_TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_FIX_DURATION DECIMAL(38,4),
AVG_DELIVER_DELTA DECIMAL(38,4),
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;

INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1
(
UUID                             ,
VIN                              ,
CUSTOMERCERTYPEBUY               ,
DEALER                           ,
DEALERNAME                       ,
CARSERIESCODENAME                ,
CARTYPECODENAME                  ,
INVOICEDATEFIRST                 ,
DRIVEMILEAGE                     ,
BUYDATE                          ,
VEHICLETYPE                      ,
CAR_AGE                          ,
FIX_CNT                          ,
LAST_FIX_DATE                    ,
FIRST_MAINTENANCE_DATE           ,
FIRST_MAINTENANCE                ,
MAINTENANCE                      ,
INSURANCE                        ,
CLAIM                            ,
MINOR_REPAIRS                    ,
OVERHAUL                         ,
ACCIDENT                         ,
SALES_CNT                        ,
AVG_LABOUR_HOUR                  ,
AVG_REAL_LABOUR_FEE       ,
AVG_LABOUR_FEE_DISCOUNT          ,
AVG_RECEIVEABLE_PARTS_FEE        ,
AVG_REAL_PARTS_FEE               ,
AVG_PARTS_FEE_DISCOUNT,
AVG_TOTAL_REAL_AMOUNT         ,
AVG_FIX_DURATION                 ,
AVG_DELIVER_DELTA                ,
REFRESH_DATE
)
SELECT  
UUID() AS UUID,                 
T1.VIN                      ,
T1.CUSTOMERCERTYPEBUY       ,
T1.DEALER                   ,
T1.DEALERNAME               ,
T1.CARSERIESCODENAME        ,
T1.CARTYPECODENAME          ,
T1.INVOICEDATEFIRST         ,
T1.DRIVEMILEAGE             ,
T1.BUYDATE                  ,
T1.VEHICLETYPE              ,
--T2.CAR_AGE,
CASE WHEN DATEDIFF(T1.BUYDATE, T1.INVOICEDATEFIRST)=0 THEN NULL
ELSE CAST(DATEDIFF(T1.BUYDATE, T1.INVOICEDATEFIRST) / 365 as decimal(38,4)) END CAR_AGE,
T2.FIX_CNT,
T2.LAST_FIX_DATE                    ,
T2.START_DATE AS FIRST_MAINTENANCE_DATE           ,
T2.FIRST_MAINTENANCE                ,
T2.MAINTENANCE                      ,
T2.INSURANCE                        ,
T2.CLAIM                            ,
T2.MINOR_REPAIRS                    ,
T2.OVERHAUL                         ,
T2.ACCIDENT                         ,
T2.SALES_CNT                        ,
T2.AVG_LABOUR_HOUR                  ,
T2.AVG_REAL_LABOUR_FEE       ,
T2.AVG_LABOUR_FEE_DISCOUNT          ,
T2.AVG_RECEIVEABLE_PARTS_FEE        ,
T2.AVG_REAL_PARTS_FEE               ,
T2.AVG_PARTS_FEE_DISCOUNT,
T2.AVG_TOTAL_REAL_AMOUNT         ,
T2.AVG_FIX_DURATION                 ,
T2.AVG_DELIVER_DELTA                ,
NOW() AS REFRESH_DATE
FROM BIGDATA.RAW_UCMS_V_GMUCMSQUERY01_CHANGE_POSITIVE T1
LEFT JOIN   (
SELECT                                       
T1.VIN                                       ,
T1.BUYDATE                                   ,
T1.INVOICEDATEFIRST                          ,
/* CASE WHEN DATEDIFF(T1.BUYDATE, T1.INVOICEDATEFIRST)=0 THEN NULL
ELSE CAST(DATEDIFF(T1.BUYDATE, T1.INVOICEDATEFIRST) / 365 as decimal(38,4)) END CAR_AGE, */
T1.FIX_CNT                                   ,
T1.LAST_FIX_DATE                             ,
T1.FIRST_MAINTENANCE                         ,
T1.MAINTENANCE                               ,
T1.INSURANCE                                 ,
T1.CLAIM                                     ,
T1.MINOR_REPAIRS                             ,
T1.OVERHAUL                                  ,
T1.ACCIDENT                                  ,
T1.SALES_CNT                                 ,
T1.total_LABOUR_HOUR                         ,
T1.AVG_LABOUR_HOUR                           ,
T1.TOTAL_RECEIVEABLE_LABOUR_FEE              ,
T1.AVG_RECEIVEABLE_LABOUR_FEE                ,
T1.TOTAL_REAL_LABOUR_FEE                     ,
T1.AVG_REAL_LABOUR_FEE                       ,
T1.AVG_LABOUR_FEE_DISCOUNT                   ,
T1.TOTAL_RECEIVEABLE_PARTS_FEE               ,
T1.AVG_RECEIVEABLE_PARTS_FEE                 ,
T1.TOTAL_REAL_PARTS_FEE                      ,
T1.AVG_REAL_PARTS_FEE                        ,
T1.AVG_PARTS_FEE_DISCOUNT                    ,
T1.TOTAL_AMOUNT                              ,
T1.AVG_AMOUNT                                ,
T1.TOTAL_REAL_AMOUNT                      ,
T1.AVG_TOTAL_REAL_AMOUNT                  ,
T1.AVG_FIX_DURATION                          ,
T1.AVG_DELIVER_DELTA,
T2.START_DATE
FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESCDSE001_V1 T1
LEFT JOIN 
(
SELECT VIN3 AS VIN,MIN(START_DATE) AS START_DATE 
FROM BIGDATA.RAW_DDC_TT_RO_CHANGE_POSITIVE T 
WHERE RO_TYPE='首保'
GROUP BY VIN3
)  T2
ON T1.VIN=T2.VIN
) T2
ON T1.VIN=T2.VIN;

COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1;---503458





---------------------------------------------------------------------------------------
--优化后的驾驶频率计算
--主键是vin
drop table BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV
(
VIN STRING NOT NULL,
DRIVE_FREQUENCY DECIMAL(38,4),
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (VIN)
)
PARTITION BY HASH(VIN) PARTITIONS 12
STORED AS KUDU;

DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV;
INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV
SELECT
VIN ,
CAST(CASE WHEN CAR_AGE=0 THEN NULL ELSE
DRIVEMILEAGE/CAR_AGE   END  as decimal(38,4)) AS DRIVE_FREQUENCY  ,
NOW() AS REFRESH_DATE
FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1;
--表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV;
--删除不合理数据--这个要放后面
/* DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV WHERE DRIVE_FREQUENCY<0; */
--表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV;---503458
------------------------------------------------------------------------------------


----------连表----------
--主键vin
DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP
(
UUID STRING,
VIN STRING NOT NULL,
CUSTOMERCERTYPEBUY STRING,
DEALER STRING,
DEALERNAME STRING,
CARSERIESCODENAME STRING,
CARTYPECODENAME STRING,
INVOICEDATEFIRST TIMESTAMP,
DRIVEMILEAGE bigint,
BUYDATE TIMESTAMP,
VEHICLETYPE STRING,
CAR_AGE DECIMAL(38,4),
FIX_CNT INT,
LAST_FIX_DATE TIMESTAMP,
FIRST_MAINTENANCE_DATE TIMESTAMP,
FIRST_MAINTENANCE INT ,
MAINTENANCE INT,
INSURANCE  INT,
CLAIM  INT,
MINOR_REPAIRS INT,
OVERHAUL INT,
ACCIDENT  INT ,
SALES_CNT  INT,
AVG_LABOUR_HOUR  DECIMAL(38,4),
AVG_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_LABOUR_FEE_DISCOUNT DECIMAL(38,4),
AVG_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
AVG_REAL_PARTS_FEE DECIMAL(38,4),
AVG_PARTS_FEE_DISCOUNT DECIMAL(38,4),
AVG_TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_FIX_DURATION DECIMAL(38,4),
AVG_DELIVER_DELTA DECIMAL(38,4),
GENDER STRING,
BIRTHDAY TIMESTAMP,
SALES_CODE STRING,
DEAL_CODE STRING,
MODEL STRING,
DRIVE_FREQUENCY DECIMAL(38,4),
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;



DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP;
INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP
SELECT 
UUID() AS UUID,
T1.VIN                          ,
T1.CUSTOMERCERTYPEBUY AS CUSTOMERCERTYPEBUY           ,----和wangjia讨论之后修改
T1.DEALER                       ,
T1.DEALERNAME                   ,
T1.CARSERIESCODENAME            ,
T1.CARTYPECODENAME              ,
T1.INVOICEDATEFIRST             ,
T1.DRIVEMILEAGE                 ,
T1.BUYDATE                      ,
T1.VEHICLETYPE                  ,
T1.CAR_AGE                      ,
T1.FIX_CNT                      ,
T1.LAST_FIX_DATE                ,
T1.FIRST_MAINTENANCE_DATE       ,
T1.FIRST_MAINTENANCE            ,
T1.MAINTENANCE                  ,
T1.INSURANCE                    ,
T1.CLAIM                        ,
T1.MINOR_REPAIRS                ,
T1.OVERHAUL                     ,
T1.ACCIDENT                     ,
T1.SALES_CNT                    ,
T1.AVG_LABOUR_HOUR              ,
T1.AVG_REAL_LABOUR_FEE   ,
T1.AVG_LABOUR_FEE_DISCOUNT      ,
T1.AVG_RECEIVEABLE_PARTS_FEE    ,
T1.AVG_REAL_PARTS_FEE           ,
T1.AVG_PARTS_FEE_DISCOUNT ,
T1.AVG_TOTAL_REAL_AMOUNT     ,
T1.AVG_FIX_DURATION             ,
T1.AVG_DELIVER_DELTA            ,
T2.GENDER                       ,
T2.BIRTHDAY                     ,
T3.SALES_CODE                   ,
T3.DEALER_CODE                    ,
T4.MODEL                        ,
T5.DRIVE_FREQUENCY              ,
NOW () AS REFRESH_DATE	
FROM 
BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_PO1 T1
LEFT JOIN BIGDATA.RAW_DDC_TM_OWNER_NEW_CHANGE_POSITIVE T2   ---性别，出生日期
ON T1.VIN=T2.VIN
LEFT JOIN BIGDATA.RAW_DDC_TT_VHCL_DLR_OUTBOUND_CHANGE_POSITIVE T3 ---经销商销售代码 经销商代码
ON T1.VIN=T3.VIN1
LEFT JOIN BIGDATA.RAW_DDC_TM_VEHICLE_NEW_CHANGE_POSITIVE T4
ON T1.VIN=T4.VIN2
LEFT JOIN BIGDATA.DATA_MINING_CHANGE_POSITIVE_JIASHIPINLV T5
ON T1.VIN=T5.VIN;

COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP;---503458




----指标加工形成宽表#####

DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
(
UUID STRING,
VIN STRING NOT NULL,
CUSTOMERCERTYPEBUY STRING,
DEALER STRING,
DEALERNAME STRING,
CARSERIESCODENAME STRING,
CARTYPECODENAME STRING,
INVOICEDATEFIRST TIMESTAMP,
DRIVEMILEAGE bigint,
BUYDATE TIMESTAMP,
VEHICLETYPE STRING,
CAR_AGE DECIMAL(38,4),
FIX_CNT INT,
LAST_FIX_DATE TIMESTAMP,
FIRST_MAINTENANCE_DATE TIMESTAMP,
FIRST_MAINTENANCE INT ,
MAINTENANCE INT,
INSURANCE  INT,
CLAIM  INT,
MINOR_REPAIRS INT,
OVERHAUL INT,
ACCIDENT  INT ,
SALES_CNT  INT,
AVG_LABOUR_HOUR  DECIMAL(38,4),
AVG_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_LABOUR_FEE_DISCOUNT DECIMAL(38,4),
AVG_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
AVG_REAL_PARTS_FEE DECIMAL(38,4),
AVG_PARTS_FEE_DISCOUNT DECIMAL(38,4),
AVG_TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_FIX_DURATION DECIMAL(38,4),
AVG_DELIVER_DELTA DECIMAL(38,4),
GENDER STRING,
BIRTHDAY TIMESTAMP,
SALES_CODE STRING,
DEAL_CODE STRING,
MODEL STRING,
DRIVE_FREQUENCY DECIMAL(38,4),
FIX_FREQUENCY DECIMAL(38,4),
MAINTENANCE_FREQUENCY DECIMAL(38,4),
INSURANCE_FREQUENCY DECIMAL(38,4),
CLAIM_FREQUENCY DECIMAL(38,4),
MINOR_REPAIRS_FREQUENCY DECIMAL(38,4),
OVERHAUL_FREQUENCY DECIMAL(38,4),
ACCIDENT_FREQUENCY DECIMAL(38,4),
FIRST_MAINTENANCE_INTERVAL DECIMAL(38,4),
LAST_FIX_INTERVAL DECIMAL(38,4),
OWNER_AGE DECIMAL(38,4),
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;


DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;
INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
SELECT
UUID,
VIN	,
CUSTOMERCERTYPEBUY	,
DEALER	,
DEALERNAME	,
CARSERIESCODENAME	,
CARTYPECODENAME	,
INVOICEDATEFIRST	,
DRIVEMILEAGE	,
BUYDATE	,
VEHICLETYPE	,
CAR_AGE	,
FIX_CNT	,
LAST_FIX_DATE	,
FIRST_MAINTENANCE_DATE	,
FIRST_MAINTENANCE	,
MAINTENANCE	,
INSURANCE	,
CLAIM	,
MINOR_REPAIRS	,
OVERHAUL	,
ACCIDENT	,
SALES_CNT	,
AVG_LABOUR_HOUR	,
AVG_REAL_LABOUR_FEE	,
AVG_LABOUR_FEE_DISCOUNT	,
AVG_RECEIVEABLE_PARTS_FEE	,
AVG_REAL_PARTS_FEE	,
AVG_PARTS_FEE_DISCOUNT ,
AVG_TOTAL_REAL_AMOUNT	,
AVG_FIX_DURATION	,
AVG_DELIVER_DELTA	,
GENDER	,
BIRTHDAY	,
SALES_CODE	,
DEAL_CODE	,
MODEL	,
DRIVE_FREQUENCY	,
CAST(FIX_CNT/CAR_AGE as decimal(38,4)) AS   FIX_FREQUENCY	,
CAST(MAINTENANCE /CAR_AGE as decimal(38,4)) AS MAINTENANCE_FREQUENCY	,
CAST(INSURANCE/CAR_AGE as decimal(38,4) )AS INSURANCE_FREQUENCY	,
CAST(CLAIM/CAR_AGE as decimal(38,4)) AS CLAIM_FREQUENCY	,
CAST(MINOR_REPAIRS /CAR_AGE  as decimal(38,4)) AS MINOR_REPAIRS_FREQUENCY	,
CAST(OVERHAUL /CAR_AGE as decimal(38,4)) AS OVERHAUL_FREQUENCY	,
CAST(ACCIDENT/CAR_AGE  as decimal(38,4) ) AS ACCIDENT_FREQUENCY	,
CAST((DATEDIFF(FIRST_MAINTENANCE_DATE,INVOICEDATEFIRST)/365)*12  as decimal(38,4) )AS  FIRST_MAINTENANCE_INTERVAL	,
CAST((DATEDIFF(BUYDATE,LAST_FIX_DATE)/365) as decimal(38,4)) AS  LAST_FIX_INTERVAL	,
null as OWNER_AGE	,
NOW() AS REFRESH_DATE	
FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSITIVE_TMP;
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;---503458




----------根据身份证判断男女----------
UPDATE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
SET gender = CASE
WHEN LENGTH(CUSTOMERCERTYPEBUY) = 18
AND cast(substr(CUSTOMERCERTYPEBUY, 17, 1) as int) % 2 = 0 THEN
	'女'
WHEN LENGTH(CUSTOMERCERTYPEBUY) = 18
AND cast( substr(CUSTOMERCERTYPEBUY, 17, 1) as int) % 2 != 0 THEN
	'男'
ELSE
	gender
end ;
compute stats BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;
----------根据身份证判断出生日期----------
UPDATE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
SET BIRTHDAY = to_timestamp(substr(CUSTOMERCERTYPEBUY, 7, 8),'yyyyMMdd')
where LENGTH(CUSTOMERCERTYPEBUY) = 18
and (substr(CUSTOMERCERTYPEBUY,7,1)='1' or substr(CUSTOMERCERTYPEBUY,7,1)='2')
and substr(CUSTOMERCERTYPEBUY,1,1)!='9' 
and (substr(CUSTOMERCERTYPEBUY,11,1)='1' or substr(CUSTOMERCERTYPEBUY,11,1)='0') 
and (cast(substr(CUSTOMERCERTYPEBUY,13,1) as int) + cast(substr(CUSTOMERCERTYPEBUY,14,1) as int ))>=1 
and cast(substr(CUSTOMERCERTYPEBUY,13,1) as int )<=3 ;

compute stats BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;
----------年龄计算----------
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  owner_age= cast( datediff(BUYDATE,BIRTHDAY) / 365  as decimal(38,4));
compute stats BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;

----------车型代码转换----------
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '宝来三厢'
where substr (MODEL, 1,2)='15';
--29430
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '宝来HS两厢'
where substr (MODEL, 1,2)='1J';
--0


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '迈腾'
where substr (MODEL,1, 2)='94';
--11667
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '迈腾'
where substr (MODEL,1, 2)='9X';
--1913
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '迈腾'
where substr (MODEL,1, 2)='0B';
--4515


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '捷达'
where substr (MODEL, 1,2)='1G';
--6833
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '捷达'
where substr (MODEL, 1,2)='BS';
--18568


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '速腾'
where substr (MODEL,1, 2)='9L';
--4069
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '速腾'
where substr (MODEL,1, 2)='BK';
--27893


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫GTI'
where MODEL='9819B3';
--0
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫GTI'
where MODEL='BN19TZ';
--0
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫GTI'
where MODEL='BN19UZ';
--0
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫GTI'
where MODEL='BN29TZ';
--0


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫·嘉旅'
where substr (MODEL,1, 2)='0S';
--1614
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫'
where substr (MODEL, 1,2)='98';
--6667
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫'
where substr (MODEL, 1,2)='2J';
--1
update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '高尔夫'
where substr (MODEL, 1,2)='BN';
--11788


update BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL
set  MODEL= '大众CC'
where substr (MODEL, 1,2)='99';
--4217
--表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL;



-----连经销商信息
DROP TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2;
CREATE TABLE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
(
UUID STRING,
VIN STRING NOT NULL,
CUSTOMERCERTYPEBUY STRING,
DEALER STRING,
DEALERNAME STRING,
CARSERIESCODENAME STRING,
CARTYPECODENAME STRING,
INVOICEDATEFIRST TIMESTAMP,
DRIVEMILEAGE bigint,
BUYDATE TIMESTAMP,
VEHICLETYPE STRING,
CAR_AGE DECIMAL(38,4),
FIX_CNT INT,
LAST_FIX_DATE TIMESTAMP,
FIRST_MAINTENANCE_DATE TIMESTAMP,
FIRST_MAINTENANCE INT ,
MAINTENANCE INT,
INSURANCE  INT,
CLAIM  INT,
MINOR_REPAIRS INT,
OVERHAUL INT,
ACCIDENT  INT ,
SALES_CNT  INT,
AVG_LABOUR_HOUR  DECIMAL(38,4),
AVG_REAL_LABOUR_FEE DECIMAL(38,4),
AVG_LABOUR_FEE_DISCOUNT DECIMAL(38,4),
AVG_RECEIVEABLE_PARTS_FEE DECIMAL(38,4),
AVG_REAL_PARTS_FEE DECIMAL(38,4),
AVG_PARTS_FEE_DISCOUNT DECIMAL(38,4),
AVG_TOTAL_REAL_AMOUNT DECIMAL(38,4),
AVG_FIX_DURATION DECIMAL(38,4),
AVG_DELIVER_DELTA DECIMAL(38,4),
GENDER STRING,
BIRTHDAY TIMESTAMP,
SALES_CODE STRING,
DEAL_CODE STRING,
MODEL STRING,
DRIVE_FREQUENCY DECIMAL(38,4),
FIX_FREQUENCY DECIMAL(38,4),
MAINTENANCE_FREQUENCY DECIMAL(38,4),
INSURANCE_FREQUENCY DECIMAL(38,4),
CLAIM_FREQUENCY DECIMAL(38,4),
MINOR_REPAIRS_FREQUENCY DECIMAL(38,4),
OVERHAUL_FREQUENCY DECIMAL(38,4),
ACCIDENT_FREQUENCY DECIMAL(38,4),
FIRST_MAINTENANCE_INTERVAL DECIMAL(38,4),
LAST_FIX_INTERVAL DECIMAL(38,4),
OWNER_AGE DECIMAL(38,4),
ACQUISITION_DISTRICT STRING	,
ACQUISITION_CITY STRING,
SALE_DISTRICT STRING,
SALE_CITY STRING,
CHANGE_FLAG  STRING,
REFRESH_DATE  TIMESTAMP,
PRIMARY KEY (UUID)
)
PARTITION BY HASH(UUID) PARTITIONS 12
STORED AS KUDU;


DELETE FROM 
BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2;
INSERT INTO BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
SELECT 
UUID() AS UUID,
T1.VIN	,
T1.CUSTOMERCERTYPEBUY	,
T1.DEALER	,
T1.DEALERNAME	,
T1.CARSERIESCODENAME	,
T1.CARTYPECODENAME	,
T1.INVOICEDATEFIRST	,
T1.DRIVEMILEAGE	,
T1.BUYDATE	,
T1.VEHICLETYPE	,
T1.CAR_AGE	,
T1.FIX_CNT	,
T1.LAST_FIX_DATE	,
T1.FIRST_MAINTENANCE_DATE	,
T1.FIRST_MAINTENANCE	,
T1.MAINTENANCE	,
T1.INSURANCE	,
T1.CLAIM	,
T1.MINOR_REPAIRS	,
T1.OVERHAUL	,
T1.ACCIDENT	,
T1.SALES_CNT	,
T1.AVG_LABOUR_HOUR	,
T1.AVG_REAL_LABOUR_FEE	,
T1.AVG_LABOUR_FEE_DISCOUNT	,
T1.AVG_RECEIVEABLE_PARTS_FEE	,
T1.AVG_REAL_PARTS_FEE	,
T1.AVG_PARTS_FEE_DISCOUNT,
T1.AVG_TOTAL_REAL_AMOUNT	,
T1.AVG_FIX_DURATION	,
T1.AVG_DELIVER_DELTA	,
T1.GENDER	,
T1.BIRTHDAY	,
T1.SALES_CODE	,
T1.DEAL_CODE	,
T1.MODEL	,
T1.DRIVE_FREQUENCY	,
T1.FIX_FREQUENCY	,
T1.MAINTENANCE_FREQUENCY	,
T1.INSURANCE_FREQUENCY	,
T1.CLAIM_FREQUENCY	,
T1.MINOR_REPAIRS_FREQUENCY	,
T1.OVERHAUL_FREQUENCY	,
T1.ACCIDENT_FREQUENCY	,
T1.FIRST_MAINTENANCE_INTERVAL	,
T1.LAST_FIX_INTERVAL	,
T1.OWNER_AGE	,
T2.DISTRICT AS ACQUISITION_DISTRICT	,
T2.CITY AS ACQUISITION_CITY	,
T3.DISTRICT AS SALE_DISTRICT,
T3.CITY AS SALE_CITY,
'1' AS CHANGE_FLAG	,
NOW()REFRESH_DATE	
FROM 
BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL T1
LEFT JOIN BIGDATA.RAW_MDM_SALES_LIST_VW_DATA_MINING T2
ON UPPER(TRIM(T1.DEALER))=UPPER(TRIM(T2.SALES_CODE))
AND TRIM(T2.SALES_CODE)<>''
LEFT JOIN BIGDATA.RAW_MDM_SALES_LIST_VW_DATA_MINING T3
ON UPPER(TRIM(T1.SALES_CODE))=UPPER(TRIM(T3.SALES_CODE))
AND TRIM(T3.SALES_CODE)<>'';
---表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2;


---用收购省份补销售省份
UPDATE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
SET  SALE_DISTRICT= ACQUISITION_DISTRICT
WHERE SALE_DISTRICT IS NULL;
UPDATE BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
SET  SALE_CITY= ACQUISITION_CITY
WHERE SALE_CITY IS NULL;


---删除销售省份城市为空的--
DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
WHERE 
SALE_DISTRICT IS NULL
OR TRIM(SALE_DISTRICT)=''
OR SALE_CITY IS NULL
OR TRIM(SALE_CITY)=''
--删除经销商代码为空的
OR  SALES_CODE IS NULL
--OR TRIM(SALES_CODE)=''
---删除首保时间间隔为负---
OR FIRST_MAINTENANCE_INTERVAL<0
----删除平均维修时长小于0#####
OR AVG_FIX_DURATION <=0
-----删除车系名称为空值#####
OR CARSERIESCODENAME IS NULL
OR TRIM(CARSERIESCODENAME)=''
---删除车龄为空值 
OR CAR_AGE IS NULL
---删除旧车行驶里程为0
OR DRIVEMILEAGE=0
---删除当前年龄小于18 大于70的#####
OR OWNER_AGE<18
OR OWNER_AGE>70
---删除不是家庭用车的
--OR VEHICLETYPE<>'家庭用车'
--这个要放最后
or AVG_LABOUR_FEE_DISCOUNT  <0 
OR AVG_PARTS_FEE_DISCOUNT  <0
---驾驶频率
or DRIVE_FREQUENCY<0;

/* --删除奥迪无效车型
DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
WHERE EXISTS (SELECT 1 FROM BIGDATA.RAW_AUDI_MODEL_LIST WHERE BIGDATA.RAW_AUDI_MODEL_LIST.MODEL=
SUBSTR(BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2.MODEL,1,1)
and BIGDATA.RAW_AUDI_MODEL_LIST.MODEL IN ('4','8')
);

DELETE FROM BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2
WHERE EXISTS (SELECT 1 FROM BIGDATA.RAW_AUDI_MODEL_LIST WHERE BIGDATA.RAW_AUDI_MODEL_LIST.MODEL=
SUBSTR(BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2.MODEL,1,2)
and BIGDATA.RAW_AUDI_MODEL_LIST.MODEL not IN ('4','8')
); */



---表分析
COMPUTE STATS BIGDATA.DATA_MINING_CHANGE_POSITIVE_ESC_POSI_MODEL2_;
--与换购正例去重



